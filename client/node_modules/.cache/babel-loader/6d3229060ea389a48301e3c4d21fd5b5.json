{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nvar CALLBACK_MAP = {\n  'animation_changed': 'onAnimationChange',\n  'click': 'onClick',\n  'clickable_changed': 'onClickableChange',\n  'cursor_changed': 'onCursorChange',\n  'dblclick': 'onDoubleClick',\n  'drag': 'onDrag',\n  'dragend': 'onDragEnd',\n  'draggable_changed': 'onDraggableChange',\n  'dragstart': 'onDragStart',\n  'flat_changed': 'onFlatChange',\n  'icon_changed': 'onIconChange',\n  'mousedown': 'onMouseDown',\n  'mouseout': 'onMouseOut',\n  'mouseover': 'onMouseOver',\n  'mouseup': 'onMouseUp',\n  'position_changed': 'onPositionChange',\n  'rightclick': 'onRightClick',\n  'shape_changed': 'onShapeChange',\n  'title_changed': 'onTitleChange',\n  'visible_changed': 'onVisibleChange',\n  'zindex_changed': 'onZIndexChange'\n};\n\nvar Marker = function (_Component) {\n  _inherits(Marker, _Component);\n\n  function Marker() {\n    _classCallCheck(this, Marker);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Marker.prototype.componentDidMount = function componentDidMount() {\n    if (this.props.map) {\n      this.renderMarker(this.props);\n    }\n  };\n\n  Marker.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var renderMarker = false;\n\n    if (nextProps.map !== this.props.map) {\n      renderMarker = true;\n    }\n\n    if (!Object.is(nextProps.position, this.props.position)) {\n      renderMarker = true;\n    }\n\n    if (!Object.is(nextProps.options, this.props.options)) {\n      renderMarker = true;\n    }\n\n    if (renderMarker) {\n      this.renderMarker(nextProps);\n    }\n  };\n\n  Marker.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (!this.marker) {\n      return;\n    }\n\n    google.maps.event.clearInstanceListeners(this.marker);\n    this.marker.setMap(null);\n  };\n\n  Marker.prototype.onMarkerCallback = function onMarkerCallback(callback, event) {\n    this.props[callback](this.marker, event);\n  };\n\n  Marker.prototype.renderMarker = function renderMarker(props) {\n    var _this2 = this;\n\n    var map = props.map,\n        options = props.options,\n        position = props.position,\n        width = props.width,\n        height = props.height;\n\n    if (!map) {\n      return;\n    }\n\n    if (!this.marker) {\n      this.marker = new google.maps.Marker(_extends({\n        map: map,\n        position: position\n      }, options));\n      Object.keys(CALLBACK_MAP).forEach(function (key) {\n        google.maps.event.addListener(_this2.marker, key, _this2.onMarkerCallback.bind(_this2, CALLBACK_MAP[key]));\n      });\n      return;\n    }\n\n    this.marker.setOptions(_extends({\n      map: map,\n      position: position\n    }, options));\n  };\n\n  Marker.prototype.render = function render() {\n    return null;\n  };\n\n  return Marker;\n}(Component);\n\nMarker.propTypes = {\n  map: PropTypes.object,\n  options: PropTypes.object,\n  position: PropTypes.object.isRequired,\n  onAnimationChange: PropTypes.func,\n  onClick: PropTypes.func,\n  onClickableChange: PropTypes.func,\n  onCursorChange: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDrag: PropTypes.func,\n  onDragEnd: PropTypes.func,\n  onDraggableChange: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onFlatChange: PropTypes.func,\n  onIconChange: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  onPositionChange: PropTypes.func,\n  onRightClick: PropTypes.func,\n  onShapeChange: PropTypes.func,\n  onTitleChange: PropTypes.func,\n  onVisibleChange: PropTypes.func,\n  onZIndexChange: PropTypes.func\n};\nMarker.defaultProps = {\n  options: {},\n  onAnimationChange: function onAnimationChange(marker) {},\n  onClick: function onClick(marker, event) {},\n  onClickableChange: function onClickableChange(marker) {},\n  onCursorChange: function onCursorChange(marker) {},\n  onDoubleClick: function onDoubleClick(marker, event) {},\n  onDrag: function onDrag(marker, event) {},\n  onDragEnd: function onDragEnd(marker, event) {},\n  onDraggableChange: function onDraggableChange(marker) {},\n  onDragStart: function onDragStart(marker, event) {},\n  onFlatChange: function onFlatChange(marker) {},\n  onIconChange: function onIconChange(marker) {},\n  onMouseDown: function onMouseDown(marker, event) {},\n  onMouseOut: function onMouseOut(marker, event) {},\n  onMouseOver: function onMouseOver(marker, event) {},\n  onMouseUp: function onMouseUp(marker, event) {},\n  onPositionChange: function onPositionChange(marker) {},\n  onRightClick: function onRightClick(marker, event) {},\n  onShapeChange: function onShapeChange(marker) {},\n  onTitleChange: function onTitleChange(marker) {},\n  onVisibleChange: function onVisibleChange(marker) {},\n  onZIndexChange: function onZIndexChange(marker) {}\n};\nexport default Marker;","map":null,"metadata":{},"sourceType":"module"}